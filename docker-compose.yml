version: '3'
services:
    db:
        image: mariadb:10
        environment:
            MYSQL_DATABASE: db
            MYSQL_USER: user
            MYSQL_PASSWORD: pass
            MYSQL_ROOT_PASSWORD: root
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "--user=user", "--password=pass", "--silent"]
            interval: 30s
            timeout: 10s
            retries: 5
    queue:
        image: rabbitmq:3.7-management
        ports:
            - 83:15672
        healthcheck:
            test: ["CMD", "rabbitmqctl", "status"]
            interval: 30s
            timeout: 10s
            retries: 5
    hub:
        image: selenium/hub:3.141.59-titanium
        ports:
            - 85:4444
        healthcheck:
            test: ["CMD", "/opt/bin/check-grid.sh", "--host", "0.0.0.0", "--port", "4444"]
            interval: 30s
            timeout: 10s
            retries: 5
        environment:
            SE_OPTS: "-timeout 30"
    chrome:
        image: selenium/node-chrome:3.141.59-titanium
        links:
            - app:example.com
        depends_on:
            - hub
        volumes:
            - /dev/shm:/dev/shm
        environment:
            HUB_HOST: hub
            HUB_PORT: 4444
            #START_XVFB: 0
            NODE_MAX_INSTANCES: 4
            NODE_MAX_SESSION: 4
        deploy:
            replicas: 1
        entrypoint: bash -c 'SE_OPTS="-host $$HOSTNAME" /opt/bin/entry_point.sh'
    firefox:
        image: selenium/node-firefox:3.141.59-titanium
        links:
            - app:example.com
        depends_on:
            - hub
        volumes:
            - /dev/shm:/dev/shm
        environment:
            HUB_HOST: hub
            HUB_PORT: 4444
            #START_XVFB: 0
            NODE_MAX_INSTANCES: 4
            NODE_MAX_SESSION: 4
        deploy:
            replicas: 1
        entrypoint: bash -c 'SE_OPTS="-host $$HOSTNAME" /opt/bin/entry_point.sh'
    # https://github.com/budtmo/docker-android/blob/master/README_APPIUM_AND_SELENIUM.md
    # https://github.com/budtmo/docker-android/blob/master/docker-compose.yml
    #android:
    #    image: tienvx/docker-android
    #    privileged: true
    #    links:
    #        - app:example.com
    #    depends_on:
    #        - hub
    #    environment:
    #        - DEVICE=Samsung Galaxy S10
    #        - CONNECT_TO_GRID=true
    #        - APPIUM=true
    #        - SELENIUM_HOST=hub
    #        - MOBILE_WEB_TEST=true
    #        - AUTO_RECORD=false
    #    deploy:
    #        replicas: 4
    minio:
        image:   'minio/minio'
        ports:
            - 84:9000
        environment:
            # https://docs.minio.io/docs/minio-server-configuration-guide
            MINIO_ACCESS_KEY: "$AWS_S3_KEY"
            MINIO_SECRET_KEY: "$AWS_S3_SECRET"
            MINIO_REGION: "$AWS_S3_REGION"
        entrypoint: sh
        command: -c 'mkdir -p /data/mbt && minio server --address :9000 /data'
    app:
        image: 'tienvx/mbt-example-app'
        ports:
            - 81:80
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost", "80"]
            interval: 30s
            timeout: 10s
            retries: 5
        depends_on:
            - db
    api:
        image: "tienvx/mbt-example-api:${MBT_VERSION}"
        ports:
            - 80:80
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost", "80"]
            interval: 30s
            timeout: 10s
            retries: 5
        depends_on:
            - queue
            - db
            - minio
        environment:
            APP_ENV: prod
            DATABASE_URL: 'mysql://user:pass@db:3306/db'
            MESSENGER_TRANSPORT_DSN: 'amqp://guest:guest@queue:5672/%2f/messages'
            AWS_S3_VERSION: 'latest'
            AWS_S3_REGION: "$AWS_S3_REGION"
            AWS_S3_ENDPOINT: 'http://minio:9000'
            AWS_S3_KEY: "$AWS_S3_KEY"
            AWS_S3_SECRET: "$AWS_S3_SECRET"
            AWS_S3_BUCKET: 'mbt'
            SLACK_HOOK_URL: "${SLACK_HOOK_URL}"
            SLACK_FROM: "${SLACK_FROM}"
            SLACK_TO: "${SLACK_TO}"
            SLACK_MESSAGE: "${SLACK_MESSAGE}"
            EMAIL_FROM: "${EMAIL_FROM}"
            EMAIL_TO: "${EMAIL_TO}"
            EMAIL_SUBJECT: "${EMAIL_SUBJECT}"
            MAILER_DSN: "${MAILER_DSN}"
        deploy:
            replicas: 1
    worker:
        image: "tienvx/mbt-example-worker:${MBT_VERSION}"
        links:
            - app:example.com
        depends_on:
            - queue
            - db
            - minio
        environment:
            APP_ENV: prod
            DATABASE_URL: 'mysql://user:pass@db:3306/db'
            MESSENGER_TRANSPORT_DSN: 'amqp://guest:guest@queue:5672/%2f/messages'
            AWS_S3_VERSION: 'latest'
            AWS_S3_REGION: "$AWS_S3_REGION"
            AWS_S3_ENDPOINT: 'http://minio:9000'
            AWS_S3_KEY: "$AWS_S3_KEY"
            AWS_S3_SECRET: "$AWS_S3_SECRET"
            AWS_S3_BUCKET: 'mbt'
            SLACK_HOOK_URL: "${SLACK_HOOK_URL}"
            SLACK_FROM: "${SLACK_FROM}"
            SLACK_TO: "${SLACK_TO}"
            SLACK_MESSAGE: "${SLACK_MESSAGE}"
            EMAIL_FROM: "${EMAIL_FROM}"
            EMAIL_TO: "${EMAIL_TO}"
            EMAIL_SUBJECT: "${EMAIL_SUBJECT}"
            MAILER_DSN: "${MAILER_DSN}"
        deploy:
            replicas: 4
    admin:
        image: "tienvx/mbt-admin:${MBT_VERSION}"
        ports:
            - 82:80
        depends_on:
            - api
        environment:
            API_URL: 'http://localhost'
