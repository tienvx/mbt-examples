version: '3'
networks:
    selenoid:
        external:
            name: selenoid
services:
    db:
        image: mariadb:10
        networks:
            selenoid: null
        environment:
            MYSQL_DATABASE: db
            MYSQL_USER: user
            MYSQL_PASSWORD: pass
            MYSQL_ROOT_PASSWORD: root
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "--user=user", "--password=pass", "--silent"]
            interval: 30s
            timeout: 10s
            retries: 5
    queue:
        image: rabbitmq:3.7-management
        networks:
            selenoid: null
        ports:
            - 83:15672
        healthcheck:
            test: ["CMD", "rabbitmqctl", "status"]
            interval: 30s
            timeout: 10s
            retries: 5
    hub:
        image: "selenoid/hub"
        networks:
            selenoid: null
        volumes:
            - "$PWD/selenoid/config/:/etc/selenoid/:ro"
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "$PWD/selenoid/video/:/opt/selenoid/video"
            - "$PWD/selenoid/logs/:/opt/selenoid/logs"
        environment:
            - OVERRIDE_VIDEO_OUTPUT_DIR=$PWD/selenoid/video/
        command: ["-conf", "/etc/selenoid/browsers.json", "-limit", "4", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-container-network", "selenoid"]
    selenoid-ui:
        image: "aerokube/selenoid-ui"
        networks:
            selenoid: null
        ports:
            - "85:8080"
        command: ["--selenoid-uri", "http://hub:4444"]
    minio:
        image:   'minio/minio'
        networks:
            selenoid: null
        ports:
            - 84:9000
        environment:
            # https://docs.minio.io/docs/minio-server-configuration-guide
            MINIO_ACCESS_KEY: "$AWS_S3_KEY"
            MINIO_SECRET_KEY: "$AWS_S3_SECRET"
            MINIO_REGION: "$AWS_S3_REGION"
        entrypoint: sh
        command: -c 'mkdir -p /data/mbt && minio server --address :9000 /data'
    app:
        image: 'tienvx/mbt-example-app'
        networks:
            selenoid:
                aliases:
                    - example.com
        ports:
            - 81:80
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost", "80"]
            interval: 30s
            timeout: 10s
            retries: 5
        depends_on:
            - db
    api:
        image: "tienvx/mbt-example-api:${MBT_VERSION}"
        networks:
            selenoid: null
        ports:
            - 80:80
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost", "80"]
            interval: 30s
            timeout: 10s
            retries: 5
        depends_on:
            - queue
            - db
            - minio
        environment:
            APP_ENV: prod
            DATABASE_URL: 'mysql://user:pass@db:3306/db'
            MESSENGER_TRANSPORT_DSN: 'amqp://guest:guest@queue:5672/%2f/messages'
            AWS_S3_VERSION: 'latest'
            AWS_S3_REGION: "$AWS_S3_REGION"
            AWS_S3_ENDPOINT: 'http://minio:9000'
            AWS_S3_KEY: "$AWS_S3_KEY"
            AWS_S3_SECRET: "$AWS_S3_SECRET"
            AWS_S3_BUCKET: 'mbt'
            SLACK_HOOK_URL: "${SLACK_HOOK_URL}"
            SLACK_FROM: "${SLACK_FROM}"
            SLACK_TO: "${SLACK_TO}"
            SLACK_MESSAGE: "${SLACK_MESSAGE}"
            EMAIL_FROM: "${EMAIL_FROM}"
            EMAIL_TO: "${EMAIL_TO}"
            EMAIL_SUBJECT: "${EMAIL_SUBJECT}"
            MAILER_DSN: "${MAILER_DSN}"
        deploy:
            replicas: 1
    worker:
        image: "tienvx/mbt-example-worker:${MBT_VERSION}"
        networks:
            selenoid: null
        depends_on:
            - queue
            - db
            - minio
        environment:
            APP_ENV: prod
            DATABASE_URL: 'mysql://user:pass@db:3306/db'
            MESSENGER_TRANSPORT_DSN: 'amqp://guest:guest@queue:5672/%2f/messages'
            AWS_S3_VERSION: 'latest'
            AWS_S3_REGION: "$AWS_S3_REGION"
            AWS_S3_ENDPOINT: 'http://minio:9000'
            AWS_S3_KEY: "$AWS_S3_KEY"
            AWS_S3_SECRET: "$AWS_S3_SECRET"
            AWS_S3_BUCKET: 'mbt'
            SLACK_HOOK_URL: "${SLACK_HOOK_URL}"
            SLACK_FROM: "${SLACK_FROM}"
            SLACK_TO: "${SLACK_TO}"
            SLACK_MESSAGE: "${SLACK_MESSAGE}"
            EMAIL_FROM: "${EMAIL_FROM}"
            EMAIL_TO: "${EMAIL_TO}"
            EMAIL_SUBJECT: "${EMAIL_SUBJECT}"
            MAILER_DSN: "${MAILER_DSN}"
        deploy:
            replicas: 4
    admin:
        image: "tienvx/mbt-admin:${MBT_VERSION}"
        networks:
            selenoid: null
        ports:
            - 82:80
        depends_on:
            - api
        environment:
            API_URL: 'http://localhost'
