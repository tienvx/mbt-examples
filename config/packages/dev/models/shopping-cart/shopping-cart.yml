framework:
    workflows:
        # https://demo.opencart.com
        shopping_cart:
            type: "state_machine"
            supports:
                - Tienvx\Bundle\MbtBundle\Subject\Subject
            metadata:
                label: "Shopping Cart"
                tags: ["opencart's shopping cart", "demo", "testing", "model-based-testing"]
            places:
                - home
                - category
                - product
                - cart
                - checkout
            initial_place: home
            transitions:
                viewAnyCategoryFromHome:
                    from: home
                    to: category
                    guard: "subject.categoryHasBeenSelected()"
                    metadata:
                        weight: 70
                        label: "From home page, choose a random category and open it"
                viewOtherCategory:
                    from: category
                    to: category
                    guard: "subject.categoryHasBeenSelected()"
                    metadata:
                        weight: 20
                        label: "From category page, choose a random category and open it"
                viewAnyCategoryFromProduct:
                    from: product
                    to: category
                    guard: "subject.categoryHasBeenSelected()"
                    metadata:
                        weight: 20
                        label: "From product page, choose a random category and open it"
                viewAnyCategoryFromCart:
                    from: cart
                    to: category
                    guard: "subject.categoryHasBeenSelected()"
                    metadata:
                        weight: 30
                        label: "From cart page, choose a random category and open it"
                viewProductFromHome:
                    from: home
                    to: product
                    guard: "subject.productHasBeenSelected()"
                    metadata:
                        label: "From home page, choose a random product and open it"
                        weight: 10
                viewProductFromCart:
                    from: cart
                    to: product
                    guard: "subject.productHasBeenSelected() && subject.cartHasSelectedProduct()"
                    metadata:
                        label: "From cart page, choose a random product and open it"
                        weight: 25
                viewProductFromCategory:
                    from: category
                    to: product
                    guard: "subject.productHasBeenSelected() && subject.categoryHasSelectedProduct()"
                    metadata:
                        label: "From category page, choose a random product and open it"
                        weight: 20
                viewCartFromHome:
                    from: home
                    to: cart
                    metadata:
                        label: "From home page, open cart to view it"
                        weight: 5
                viewCartFromCategory:
                    from: category
                    to: cart
                    metadata:
                        label: "From category page, open cart to view it"
                        weight: 5
                viewCartFromProduct:
                    from: product
                    to: cart
                    metadata:
                        label: "From product page, open cart to view it"
                        weight: 10
                viewCartFromCheckout:
                    from: checkout
                    to: cart
                    metadata:
                        label: "From checkout page, open cart to view it"
                        weight: 30
                checkoutFromHome:
                    from: home
                    to: checkout
                    metadata:
                        label: "From home page, open checkout page"
                        weight: 10
                checkoutFromCategory:
                    from: category
                    to: checkout
                    metadata:
                        label: "From category page, open checkout page"
                        weight: 30
                checkoutFromProduct:
                    from: product
                    to: checkout
                    metadata:
                        label: "From product page, open checkout page"
                        weight: 30
                checkoutFromCart:
                    from: cart
                    to: checkout
                    metadata:
                        label: "From cart page, open checkout page"
                        weight: 25
                backToHomeFromCategory:
                    from: category
                    to: home
                    metadata:
                        label: "From category page, back to home page"
                        weight: 5
                backToHomeFromProduct:
                    from: product
                    to: home
                    metadata:
                        label: "From product page, back to home page"
                        weight: 10
                backToHomeFromCart:
                    from: cart
                    to: home
                    metadata:
                        label: "From cart page, back to home page"
                        weight: 10
                backToHomeFromCheckout:
                    from: checkout
                    to: home
                    metadata:
                        label: "From checkout page, back to home page"
                        weight: 70
                update:
                    from: cart
                    to: cart
                    guard: "subject.productHasBeenSelected() && subject.cartHasSelectedProduct()"
                    metadata:
                        weight: 5
                        label: "From cart page, choose a random product and update quantity with a random number from 1 to 99"
                remove:
                    from: cart
                    to: cart
                    guard: "subject.productHasBeenSelected() && subject.cartHasSelectedProduct()"
                    metadata:
                        weight: 5
                        label: "From cart page, choose a random product and remove it"
                useCoupon:
                    from: cart
                    to: cart
                    guard: "subject.hasCoupon()"
                    metadata:
                        weight: 5
                        label: "From cart page, apply coupon code if any"
                estimateShippingAndTaxes:
                    from: cart
                    to: cart
                    metadata:
                        weight: 5
                        label: "From cart page, enter destination to get a shipping estimate"
                useGiftCertificate:
                    from: cart
                    to: cart
                    guard: "subject.hasGiftCertificate()"
                    metadata:
                        weight: 5
                        label: "From cart page, choose a random product and remove it"
                addFromHome:
                    from: home
                    to: home
                    guard: "subject.productHasBeenSelected()"
                    metadata:
                        label: "From home page, choose a random product and add it to cart"
                        weight: 5
                addFromCategory:
                    from: category
                    to: category
                    guard: "subject.productHasBeenSelected() && subject.categoryHasSelectedProduct()"
                    metadata:
                        label: "From category page, choose a random product and add it to cart"
                        weight: 25
                addFromProduct:
                    from: product
                    to: product
                    metadata:
                        label: "From product page, add it to cart"
                        weight: 30
